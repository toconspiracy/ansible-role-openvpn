---
- name: firewall | firewalld | Enable firewalld
  ansible.builtin.service:
    name: firewalld
    enabled: true
    masked: false
    state: started

# Default interface is the one that routes the traffic
# Assume that's what we want for a server
# https://medium.com/opsops/ansible-default-ipv4-is-not-what-you-think-edb8ab154b10
- name: firewall | firewalld | Get zone of default interface
  ansible.builtin.command: firewall-cmd --get-zone-of-interface={{ ansible_default_ipv4.interface }}
  register: __firewalld_default_zone
  check_mode: false
  changed_when: false # Read only, never report as changed
  failed_when: false

- name: firewall | firewalld | Enable OpenVPN Port (firewalld)
  ansible.posix.firewalld:
    port: "{{ openvpn_port }}/{{ openvpn_proto }}"
    zone: "{{ __firewalld_default_zone.stdout }}"
    permanent: true
    immediate: true
    state: enabled

- name: firewall | firewalld | Set tun0 interface to public
  # We need the tun0 interface to be trusted so that packets from other systems
  # can be routed through the VPN tunnel.
  ansible.posix.firewalld:
    interface: tun0
    zone: public
    permanent: true
    immediate: true
    state: enabled

- name: firewall | firewalld | Enable masquerading on default interface's zone
  ansible.posix.firewalld:
    masquerade: true
    zone: "{{ __firewalld_default_zone.stdout }}"
    permanent: true
    state: enabled
    immediate: true
  notify:
    - Restart firewalld

- name: firewall | firewalld | Enable masquerading on ipv6
  ansible.posix.firewalld:
    rich_rule: rule family=ipv6 masquerade
    zone: "{{ __firewalld_default_zone.stdout }}"
    permanent: true
    state: enabled
    immediate: true
  when: openvpn_server_ipv6_network is defined
  notify:
    - Restart firewalld
